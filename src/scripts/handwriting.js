class Handwriting{constructor(t,i){this.container=document.querySelector(t),this.canvas=document.createElement("canvas"),this.canvas.width=400,this.canvas.height=400,!this.container.innerHTML.trim()&&this.container.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.width=this.canvas.width,this.height=this.canvas.height,this.lineWidth=i||3,this.options={},this.handwritingX=[],this.handwritingY=[],this.redo_step=[],this.redo_trace=[],this.step=[],this.trace=[],this.drawing=!1,this.allowUndo=!1,this.allowRedo=!1,this.callback=void 0,this.handle={set_Undo_Redo:(t,i)=>{this.allowUndo=t,this.allowRedo=!!t&&i,this.allowUndo||(this.step.length=0,this.redo_step.length=0,this.redo_trace.length=0)},setLineWidth:t=>{this.lineWidth=t},setCallBack:t=>{this.callback=t},setOptions:t=>{this.options=t},mouseDown:t=>{this.drawing=!0,this.handwritingX.length=0,this.handwritingY.length=0;const{x:i,y:e}=this.getPressPoint(t);this.ctx.lineWidth=this.lineWidth,this.ctx.beginPath(),this.ctx.moveTo(i,e),this.handwritingX.push(i),this.handwritingY.push(e)},mouseMove:t=>{if(this.drawing){const i=this.canvas.getBoundingClientRect(),e=t.clientX-i.left,s=t.clientY-i.top;this.ctx.lineTo(e,s),this.ctx.stroke(),this.handwritingX.push(e),this.handwritingY.push(s)}},mouseUp:()=>{this.drawing=!1,this.trace.push([[...this.handwritingX],[...this.handwritingY],[]]),this.allowUndo&&this.step.push(this.canvas.toDataURL())},touchStart:t=>{t.preventDefault(),this.handwritingX.length=0,this.handwritingY.length=0;const i=document.documentElement,e=this.canvas.getBoundingClientRect(),s=e.top+window.pageYOffset-i.clientTop,h=e.left+window.pageXOffset-i.clientLeft,n=t.changedTouches[0],a=n.pageX-h,o=n.pageY-s;this.ctx.lineWidth=this.lineWidth,this.ctx.beginPath(),this.ctx.moveTo(a,o),this.handwritingX.push(a),this.handwritingY.push(o)},touchMove:t=>{t.preventDefault();const i=t.targetTouches[0],e=document.documentElement,s=this.canvas.getBoundingClientRect(),h=s.top+window.pageYOffset-e.clientTop,n=s.left+window.pageXOffset-e.clientLeft,a=i.pageX-n,o=i.pageY-h;this.ctx.lineTo(a,o),this.ctx.stroke(),this.handwritingX.push(a),this.handwritingY.push(o)},touchEnd:t=>{this.trace.push([[...this.handwritingX],[...this.handwritingY],[]]),this.allowUndo&&this.step.push(this.canvas.toDataURL())},undo:()=>{!this.allowUndo||this.step.length<=0||(1===this.step.length?this.allowRedo&&(this.redo_step.push(this.step.pop()),this.redo_trace.push(this.trace.pop()),this.ctx.clearRect(0,0,this.width,this.height)):(this.allowRedo?(this.redo_step.push(this.step.pop()),this.redo_trace.push(this.trace.pop())):(this.step.pop(),this.trace.pop()),this.loadFromUrl(this.step.slice(-1)[0])))},redo:()=>{!this.allowRedo||this.redo_step.length<=0||(this.step.push(this.redo_step.pop()),this.trace.push(this.redo_trace.pop()),this.loadFromUrl(this.step.slice(-1)[0]))},erase:()=>{this.ctx.clearRect(0,0,this.width,this.height),this.redo_step.length=0,this.redo_trace.length=0,this.step.length=0,this.trace.length=0}}}getPressPoint(t){const i=this.canvas.getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top}}init(){this.canvas.addEventListener("mousedown",this.handle.mouseDown),this.canvas.addEventListener("mousemove",this.handle.mouseMove),this.canvas.addEventListener("mouseup",this.handle.mouseUp),this.canvas.addEventListener("touchstart",this.handle.touchStart),this.canvas.addEventListener("touchmove",this.handle.touchMove),this.canvas.addEventListener("touchend",this.handle.touchEnd)}recognize(){const{trace:t,options:i,callback:e}=this,s=JSON.stringify({options:"enable_pre_space",requests:[{ink:t,language:"en",writing_guide:{writing_area_width:i.width||this.width||void 0,writing_area_height:i.height||this.width||void 0}}]}),h=new XMLHttpRequest;h.open("POST","https://www.google.com.tw/inputtools/request?ime=handwriting&app=mobilesearch&cs=1&oe=UTF-8"),h.setRequestHeader("content-type","application/json"),h.send(s),h.addEventListener("readystatechange",function(){if(4===this.readyState)switch(this.status){case 200:const t=JSON.parse(this.responseText);if(1===t.length){e(void 0,new Error(t[0]));break}let s=t[1][0][1];i.numOfWords&&(s=s.filter(t=>t.length==i.numOfWords)),i.numOfReturn&&(s=s.slice(0,i.numOfReturn)),e(s,void 0);break;case 403:e(void 0,new Error("access denied"));break;case 503:e(void 0,new Error("can't connect to recognition server"))}})}loadFromUrl(t){const i=new Image;i.src=t,i.onload=(()=>{this.ctx.clearRect(0,0,this.width,this.height),this.ctx.drawImage(i,0,0)})}}export default Handwriting;